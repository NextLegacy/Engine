# -------------------------------------------------------------------------------------------------
# This CmakeLists.txt file got generated by the TeaPot Engine.
# 
# TeaPot does not only generate the necessary build files for your project, it also
# builds the final executable for you. Therefor, its not recommended to build the project manually
# using cmake or something similar.
#
# In the process of building the executable, TeaPot will first build a shared library that
# contains all the source files of your project. 
#
# From there on, TeaPot will load the shared library and retrieve all the necessary information
# trough the reflection system that is implemented in the BoilingHotWater library.
#
# That way, can generate the necessary source code (later found in /genereated) that
# contains all the boilerplate code that is needed to run your project.
# -------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------
# Variables
# -------------------------------------------------------------------------------------------------

set(OUTPUT_DIR   ${{CMAKE_CURRENT_SOURCE_DIR}}/../../{})
set(ENGINE_DIR   {})
set(SOURCES_DIR  ${{CMAKE_CURRENT_SOURCE_DIR}}/../../{})
set(RESOURCE_DIR ${{CMAKE_CURRENT_SOURCE_DIR}}/../../{})

# -------------------------------------------------------------------------------------------------
# Some general settings
# -------------------------------------------------------------------------------------------------

cmake_minimum_required(VERSION 3.28.1)

project({} VERSION 0.0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD          23 )
set(CMAKE_CXX_STANDARD_REQUIRED ON )
set(CMAKE_CXX_EXTENSIONS        OFF)

# -------------------------------------------------------------------------------------------------
# Include all the necessary packages
# -------------------------------------------------------------------------------------------------

list(APPEND CMAKE_PREFIX_PATH ${{ENGINE_DIR}}/install)

find_package(BoilingHotWater REQUIRED)
find_package(OpenGL          REQUIRED)
find_package(glfw3           REQUIRED)
find_package(TeaCup          REQUIRED)
find_package(Tea             REQUIRED)

# -------------------------------------------------------------------------------------------------
# Build the shared library that contains all the source files of your project
# -------------------------------------------------------------------------------------------------

set(BUILD_SHARED_LIBS ON)

file(GLOB_RECURSE NATIVE_SOURCE_FILES ${{SOURCES_DIR}}/*.cpp)
file(GLOB_RECURSE NATIVE_HEADER_FILES ${{SOURCES_DIR}}/*.hpp)

file(WRITE "Headers.hpp" "#pragma once\n\n")

foreach(HEADER_FILE ${{NATIVE_HEADER_FILES}})
    file(APPEND "Headers.hpp" "#include \"${{HEADER_FILE}}\"\n")
endforeach()

message(STATUS "Found source files: ${{NATIVE_SOURCE_FILES}}")

add_library(NativeScripts SHARED ${{NATIVE_SOURCE_FILES}} ${{NATIVE_HEADER_FILES}} NativeScripts.cpp Headers.hpp Resources.cpp Resources.hpp)

target_link_libraries(NativeScripts PUBLIC BoilingHotWater::BoilingHotWater Tea::Tea)

target_include_directories(NativeScripts PUBLIC ${{SOURCES_DIR}})

set_target_properties(NativeScripts PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY ${{OUTPUT_DIR}}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${{OUTPUT_DIR}}
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${{OUTPUT_DIR}}
)

# -------------------------------------------------------------------------------------------------
# Install the shared library to the bin folder
# -------------------------------------------------------------------------------------------------

set(CMAKE_INSTALL_PREFIX ${{CMAKE_CURRENT_SOURCE_DIR}}/bin)

set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)

#install(TARGETS NativeScripts RUNTIME DESTINATION .)

# -------------------------------------------------------------------------------------------------
# Build the executable
# -------------------------------------------------------------------------------------------------

set(BUILD_SHARED_LIBS OFF)

add_executable(${{PROJECT_NAME}} ${{CMAKE_CURRENT_SOURCE_DIR}}/EntryPoint_Final.cpp ${{CMAKE_CURRENT_SOURCE_DIR}}/Tea.hpp ${{CMAKE_CURRENT_SOURCE_DIR}}/Tea.cpp)

target_link_libraries(${{PROJECT_NAME}} PUBLIC NativeScripts)

set_target_properties(${{PROJECT_NAME}} PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY ${{OUTPUT_DIR}}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${{OUTPUT_DIR}}
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${{OUTPUT_DIR}}
)

#install(TARGETS ${{PROJECT_NAME}} RUNTIME DESTINATION .)

# -------------------------------------------------------------------------------------------------
# Copy the necessary files to the bin folder
# -------------------------------------------------------------------------------------------------

add_custom_command(
        TARGET ${{PROJECT_NAME}} POST_BUILD
        COMMAND ${{CMAKE_COMMAND}} -E copy_directory
        %{{RESOURCE_DIR}} ${{CMAKE_INSTALL_PREFIX}}/Resources
        COMMENT "Copying ProjectTemplateFiles to ${{OUTPUT_DIR}}/ProjectTemplateFiles"
)

# -------------------------------------------------------------------------------------------------
# RESOURCES
# -------------------------------------------------------------------------------------------------

function(embed_resource resource_file_name source_file_name variable_name)

    file(READ ${{resource_file_name}} hex_content HEX)

    # remove all newlines
    string(REPEAT "[0-9a-f]" 32 column_pattern)
    string(REGEX REPLACE "(${{column_pattern}})" "\\1\n" content "${{hex_content}}")
    
    string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1, " content "${{content}}")
    
    string(REGEX REPLACE ", $" "" content "${{content}}")
    
    string(REGEX REPLACE "0x0d, 0x0a" "0x0a" content "${{content}}")
    set(array_definition "const unsigned char arr[] =\n        {{\n${{content}}\n        }}\;")
    set(map_definition "    {{\"${{variable_name}}\", []() -> std::string {{\n        ${{array_definition}}\n        return std::string(reinterpret_cast<const char*>(arr), sizeof(arr))\;\n    }}}},")
    set(source "\n${{map_definition}}\n")
    
    file(APPEND ${{source_file_name}} ${{source}})

endfunction()

file(GLOB_RECURSE RESOURCES ${{RESOURCE_DIR}}/*)

file(WRITE "${{CMAKE_CURRENT_SOURCE_DIR}}/Resources.cpp" "// Auto generated file.\nnamespace Tea{{\nconst std::unordered_map<std::string, std::string(*)()> Resources = {{\n")

foreach(RESOURCE ${{RESOURCES}})
    get_filename_component(RESOURCE_NAME ${{RESOURCE}} NAME)
    embed_resource("${{RESOURCE}}" "${{CMAKE_CURRENT_SOURCE_DIR}}/Resources.cpp" "${{RESOURCE_NAME}}")
endforeach()

file(APPEND "${{CMAKE_CURRENT_SOURCE_DIR}}/Resources.cpp" "}};\n}}")

# -------------------------------------------------------------------------------------------------